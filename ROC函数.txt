def drawROC():
    import numpy as np
    from sklearn import metrics
    #from collections import  Counter
    plt.rcParams['font.sans-serif'] = ['SimHei']
    data0 = readXmlDatabaseName(fileName, 'databaseName')
    data1 = readXml(fileName, 'faceCounts_0')
    data2 = readXml(fileName, 'faceCounts_1')
    data3 = readXml(fileName, 'faceCounts_2')
    data4 = readXml(fileName, 'faceCounts_3')
    data5 = readXml(fileName, 'faceCounts_4')
    data6 = readXml(fileName, 'AgeCannotRecogFace')
    data7 = readXml(fileName, 'AgeCannotRecogGengerButCanRecogFace')
    data8 = readXml(fileName, 'AgeYoungToOld')
    data9 = readXml(fileName, 'AgeOldToYoung')
    data10 = readXml(fileName, 'AgeCanRecog')
    data11 = readXml(fileName, 'countsPerTime')
    #y = np.array([1, 1, 2, 2])
    y = np.array(data1)
    #scores = np.array([0.1, 0.4, 0.35, 0.8])
    scores = np.array(data2)
    fpr, tpr, thresholds = metrics.roc_curve(y, scores, pos_label=0)
    
    #label = np.arange(len(data1))
    #plt.title('数据集'+data0[0]+r'中每500个数据识别结果对应的拆线(共计'+str(np.sum(data7))+'数据量)')
    plt.title('人脸识别 ROC 曲线\n(数据集'+data0[0]+r'中每500个数据为一组(共计'+str(np.size(data1))+'组))')
    #plt.plot(scores,y,linestyle='--',linewidth=2,color='k')
    plt.scatter(fpr,tpr,color='k')
    plt.plot(fpr,tpr,linestyle='--',linewidth=2,color='r')
    #plt.plot(label,data3,linestyle='--',linewidth=2)
    #plt.plot(label,data4,marker='s',linestyle='-',linewidth=2)
    #plt.plot(label,data5,marker='^',linestyle='-',linewidth=2)
    #plt.plot(label,data6,marker='o',linestyle='-',linewidth=2)
    plt.ylabel('True Positive Rate')
    plt.xlabel('False Positive Rate')
    #plt.plot([(0,0),(1,1)],'b--')
    plt.xlim([-0.01,1.01])
    plt.ylim([-0.01,01.01])
    #plt.legend(['不能识别人脸数','不能识别性别数','不能识别年龄数','错将男性识别为女性数','错将女性识别为男性数','错将年轻人识别为老年数'], loc='upper right')
    plt.grid(True)
    plt.show()